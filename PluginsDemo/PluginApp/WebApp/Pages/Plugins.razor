@page "/plugins"

@inject PluginService service

<h1>Plugins</h1>

<div class="row">
<div class="col-md-9">
        @foreach (var plugin in plugins)
        {
            <div class="card plugin ml-1">
                <h5 class="card-header">
                    @plugin.Name
                    <button @onclick=@(() => LoadPlugin(@plugin)) class="float-right"><i class="oi oi-reload"></i></button>
                </h5>
                <div class="card-body plugin-body">
                    <p class="card-text">
                        <ul>
                            @if (service.PluginResponses.TryGetValue(@plugin.Name, out List<string> responses))
                            {
                                @foreach (var response in responses)
                                {
                                    <li> @response</li>
                                }
                            }
                        </ul>
                    </p>
                </div>
            </div>
        }
    </div>
    	
    <div class="col-md-2">
                <div class="card text-white bg-dark plugin ml-1">
                    <h5 class="card-header">
                        Dynamic Plugin
                    </h5>
                    <div class="card-body plugin-body full-height">
                        <p class="card-text">
                            Enter C# code to create a plugin 'on-the-fly' (the method must return a string)<br />
                            <textarea @bind="@syntax" cols="40" rows="10" id="code" name="code"></textarea>
                            <ul>
                                @if (service.PluginResponses.TryGetValue("DynamicPlugin", out List<string> dynamicResponses))
                                {
                                    @foreach (var response in dynamicResponses)
                                    {
                                        <li> @response</li>
                                    }
                                }
                            </ul>
                        </p>
                    </div>
                    <div class="card-footer">
                        <button @onclick=LoadDynamicPlugin>Create Dynamic Plugin</button>
                    </div>
            </div>
    </div>
</div>

@code {
    int iteration = 0;
    List<HostedPlugin> plugins = new List<HostedPlugin>();
    public string syntax { get; set; } =  @"public class Plugin
        {
            public string Execute(string input)
            {
               return ""Hello from a Dynamic Plugin!"";
            }
        }";

    protected override void OnInitialized()
    {
        service.LoadPlugins();
        plugins = service.Plugins;
    }

    private void LoadPlugin(HostedPlugin currentPlugin)
    {
        iteration++;
        service.RunPlugin(currentPlugin, iteration.ToString());
    }

    private void LoadDynamicPlugin()
    {
        iteration++;
        service.CreateOrRunDynamicPlugin(syntax, iteration.ToString());
    }

}